%implements  MCHP_Digital_Output  "C"
%include "MCHP_Functions.tlc"
%function BlockInstanceSetup(block, system) void
%<LibBlockSetIsExpressionCompliant(block)>
%endfunction
%function Start(block, system) Output
%if LibBlockSampleTime(block) == -2		
%<Outputs(block, system)>
%endif
%endfunction
%function Outputs(block, system) Output
/* MCHP_Digital_Output Block: %<Name>/Output */
%assign PORT = CAST("String",block.RTWdata.Port)
%assign PINS = MchpVector(block.RTWdata.Pins)
%assign nPars = SIZE(PINS,1)
%assign SIMULTANEOUS = CAST("Number",block.RTWdata.Simultaneous_Flag)
%assign PACK = CAST("Number",block.RTWdata.Pack_Flag)
%assign READPREVIOUS = CAST("Number",block.RTWdata.ReadPrevious_Flag)
%assign PinsBitewise = CAST("Number",block.RTWdata.PinsBitewise)
%if READPREVIOUS
%if PACK
%assign u = LibBlockOutputSignal(0, "", "", 0)
%<u> = LAT%<PORT>;
%else
%foreach idx=nPars
%if %<PINS[idx]> != -1	
%assign u = LibBlockOutputSignal(idx, "", "", 0)
%<u> = LAT%<PORT>bits.LAT%<PORT>%<PINS[idx]>;	
%endif
%endforeach
%endif
%endif
%<UpdateInternal(block, system)>
%endfunction
%function UpdateInternal(block, system) Output
%assign PORT = CAST("String",block.RTWdata.Port)
%assign PortNum = CAST("Number",block.RTWdata.PortNum)
%assign PINS = MchpVector(block.RTWdata.Pins)
%assign nPars = SIZE(PINS,1)
%assign SIMULTANEOUS = CAST("Number",block.RTWdata.Simultaneous_Flag)
%assign PACK = CAST("Number",block.RTWdata.Pack_Flag)
%assign READPREVIOUS = CAST("Number",block.RTWdata.ReadPrevious_Flag)
%assign PinsBitewise = CAST("Number",block.RTWdata.PinsBitewise)
%if PACK
%assign y = LibBlockInputSignal(0, "", "", 0)
%assign TRIS = %<MchpVector(RTWGenSettings.TRIS)>
%assign thisTRIS = TRIS[PortNum]
%if thisTRIS < 0		
%assign thisTRIS = 65535
%endif
%if (PinsBitewise | thisTRIS) == 65535	
LAT%<PORT> = %<y>; /* No mask required : all pins defined as digital output are updated */
%else
{
uint16_T register WritePort%<PORT> = LAT%<PORT>;
LAT%<PORT> = WritePort%<PORT> ^ (%<PinsBitewise>U & (WritePort%<PORT> ^ %<y>)); /* Update only required pins */
}
%endif
%else 
%if (SIMULTANEOUS && (nPars >1))
{
uint16_T register WritePort%<PORT> = LAT%<PORT>;
%foreach idx=nPars
%if %<PINS[idx]> != -1	
%assign y = LibBlockInputSignal(idx, "", "", 0)
if (%<y>==1)                
WritePort%<PORT> = WritePort%<PORT> | %< 1U << PINS[idx]>U;			/* Set pin %<PORT>%<PINS[idx]> */
else
WritePort%<PORT> = WritePort%<PORT> & %< 65535 - ( 1U << PINS[idx])>U; /* Clear pin %<PORT>%<PINS[idx]> */
%endif
%endforeach
LAT%<PORT> = WritePort%<PORT> ; /* Exact simultaneous update */
}
%else 
%foreach idx=nPars
%if %<PINS[idx]> != -1	
%assign y = LibBlockInputSignal(idx, "", "", 0)
LAT%<PORT>bits.LAT%<PORT>%<PINS[idx]> = %<y>;
%endif
%endforeach
%endif
%endif
%endfunction
