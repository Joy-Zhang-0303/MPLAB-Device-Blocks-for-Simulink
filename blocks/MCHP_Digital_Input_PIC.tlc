
%function BlockInstanceSetup_MCHP_Digital_Input(block, system) void
%endfunction
%function Outputs_MCHP_Digital_Input(block, system) Output
/* MCHP_Digital_Input Block: %<Name>/Output */
%assign PORT = CAST("String",block.RTWdata.Port)
%assign PINS = MchpVector(block.RTWdata.Pins)
%assign nPars = SIZE(PINS,1)
%assign SIMULTANEOUS = CAST("Number",block.RTWdata.Simultaneous_Flag)
%assign PACK = CAST("Number",block.RTWdata.Pack_Flag)
%if PACK
%if !LibBlockOutputSignalIsExpr(0)
%assign u = LibBlockOutputSignal(0, "", "", 0)
%<u> = PORT%<PORT>;
%endif 
%else
%if SIMULTANEOUS
{
uint16_T register ReadPort%<PORT> = PORT%<PORT> ;
%foreach idx=nPars
%if %<PINS[idx]> != -1	
%assign u = LibBlockOutputSignal(idx, "", "", 0)
%<u> = ( 0 != (ReadPort%<PORT> & %< 1U << PINS[idx]>U));	/* Read pin %<PORT>%<PINS[idx]> */
%endif
%endforeach
}
%else
%foreach idx=nPars
%if !LibBlockOutputSignalIsExpr(idx)
%if %<PINS[idx]> != -1	
%assign u = LibBlockOutputSignal(idx, "", "", 0)
%<u> = PORT%<PORT>bits.R%<PORT>%<PINS[idx]>;	/* Read pin %<PORT>%<PINS[idx]> */
%endif
%endif 
%endforeach
%endif
%endif
%endfunction
%function BlockOutputSignal_MCHP_Digital_Input(block,system,portIdx,ucv,lcv,idx,retType) void
%assign PORT = CAST("String",block.RTWdata.Port)
%assign PINS = MchpVector(block.RTWdata.Pins)
%assign SIMULTANEOUS = CAST("Number",block.RTWdata.Simultaneous_Flag)
%assign PACK = CAST("Number",block.RTWdata.Pack_Flag)
%assign retVal = "0U"
%switch retType
%case "Signal"
%if PACK
%assign retVal = "PORT%<PORT>"
%else
%if SIMULTANEOUS
%assign errTxt = "Cannot generate output block signal code with SIMULTANEUS option set"
%<LibBlockReportError(block,errTxt)>
%else
%assign retVal = "PORT%<PORT>bits.R%<PORT>%<PINS[portIdx]>"
%endif
%endif
%break
%default
%assign errTxt = "Unsupported return type: %<retType>"
%<LibBlockReportError(block,errTxt)>
%break
%endswitch
%return retVal
%endfunction
