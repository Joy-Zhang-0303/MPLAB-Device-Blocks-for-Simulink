%implements  MCHP_X2C_scope  "C"
%function BlockTypeSetup(block, system) Output
%endfunction
%function BlockInstanceSetup(block, system) void
%endfunction
%function Start(block, system) Output
%<LibAddToCommonIncludes("X2CScope.h")> 
%<LibAddToCommonIncludes("X2CScopeCommunication.h")> 
%assign UARTRef = 1
%if ::DOS_03076_uart_protocol_upb_v1_16bit
%assign UTXBF = "U%<UARTRef>" +  "STAHbits.UTXBF"
%else
%assign UTXBF = "U%<UARTRef>" + "STAbits.UTXBF"
%endif	 	
X2CScope_HookUARTFunctions(mySendSerial, myReceiveSerial, myIsReceiveDataAvailable, myIsSendReady);
X2CScope_Initialise();
%openfile dspicfun = "X2C_scope_myUart.c"
#include "%<LibGetMdlPubHdrBaseName()>.h"
void mySendSerial(uint8_t data)
{
U1TXREG = data;
}
uint8_t myReceiveSerial()
{
if (U1STA & 0x0E)
{
U1STAbits.OERR = 0; /* reset error */
return ((uint8_t)0);
}
return (U1RXREG);
}
uint8_t myIsReceiveDataAvailable()
{
return (U1STAbits.URXDA);
}
uint8_t myIsSendReady()
{
return (! %<UTXBF>);
}
%openfile buffer
/* MCHP_X2C_Configuration Block: '%<Name>' */
/* UART Function Prototypes */
extern void mySendSerial(uint8_t data);
extern uint8_t myReceiveSerial();
extern uint8_t myIsReceiveDataAvailable();
extern uint8_t myIsSendReady();
%closefile buffer
%<LibCacheFunctionPrototype(buffer)>		
%closefile dspicfun
%endfunction
%function Outputs(block, system) Output
%endfunction
%function Update(block, system) Output
X2CScope_Update();	
%endfunction
