%implements  MCHP_UART_Tx  "C"
%include "MCHP_Functions.tlc"
%include "MCHP_UART_Tx_FunUtils.tlc"
%include "MCHP_UART_Tx_DMA_singleBuffer.tlc"	
%if ::isSAMx7                                    
%include "MCHP_UART_Tx_SAMx7_bare.tlc"
%include "MCHP_UART_Tx_SAMx7_Interrupt.tlc"	
%include "MCHP_UART_Tx_SAMx7_DMA_pingPongBuffer.tlc"	
%elseif ::isSAMx5 || ::isSAMC2 || ::isPIC32C || ::isSAMD2_DA1
%include "MCHP_UART_Tx_SAMx5_bare.tlc"
%include "MCHP_UART_Tx_SAMx5_Interrupt.tlc"
%include "MCHP_UART_Tx_SAMx5_DMA_pingPongBuffer.tlc"	 	
%elseif ::isdsPIC || ::isPIC32														
%include "MCHP_UART_Tx_PIC_bare.tlc"
%include "MCHP_UART_Tx_PIC_Interrupt.tlc"	
%include "MCHP_UART_Tx_PIC_DMA_pingPongBuffer.tlc"	
%endif
%function Start(block, system) Output
%endfunction
%function Update(block, system) Output
%endfunction
%function BlockInstanceSetup(block, system) void
%<UART_Tx_BlockInstanceSetup(block)>
%endfunction
%function Outputs(block, system) Output
%assign UARTRef = CAST("Number",block.RTWdata.UARTRef)
%assign NSend_Input = CAST("Number",block.RTWdata.NSend_Input)
%assign BlockInputLength = LibBlockInputSignalWidth(NSend_Input==1)	
%assign TX_IMPLEMENTATION = MchpVector(RTWGenSettings.UART_TX_IMPLEMENTATION)
%assign TX_IMPLEMENTATION = TX_IMPLEMENTATION[UARTRef-1]		
%assign UART_TX_THREAD_PROTECTION = MchpVector(RTWGenSettings.UART_TX_THREAD_PROTECTION)
%assign UART_TX_THREAD_PROTECTION = UART_TX_THREAD_PROTECTION[UARTRef-1]
%if (NSend_Input == 1)
%assign N_in = LibBlockInputSignal(0,"","",0)
%assign idxInputChars = 1
%else
%assign N_in = BlockInputLength
%assign idxInputChars = 0
%endif
%if TX_IMPLEMENTATION == 0
%assign errmsg = "UART TX is not configured, please add an UART configuration block and select one implementation for UART %<UARTRef>"
%<LibBlockReportError(block,errmsg)>	
%endif
/* MCHP_UART_Tx Block: %<Name>/Outputs */
%<UART_ThreadProtection(block,UARTRef,UART_TX_THREAD_PROTECTION,BlockInputLength,NSend_Input,N_in,"Start")>
%if NSend_Input == 1
if (%<N_in> != 0U) { /* If something to send (N > 0)*/
%endif
%switch TX_IMPLEMENTATION
%case 1
%<MCHP_UART_Tx_bare(block,system)>
%break
%case 2	
%<MCHP_UART_Tx_Interrupt(block,system)> 
%break				 	
%case 3 
%<MCHP_UART_Tx_DMA_pingPongBuffer(block,system)>			
%break			
%case 4	
%<MCHP_UART_Tx_DMA_singleBuffer(block,system)>	
%break
%default
%<LibBlockReportError(block,"Tx implementation not recognized")>
%break		
%endswitch
%if NSend_Input == 1
} /* N input = 0: Nothing to send */
%endif	
%<UART_ThreadProtection(block,UARTRef,UART_TX_THREAD_PROTECTION,BlockInputLength,NSend_Input,N_in,"Stop")>
%endfunction
